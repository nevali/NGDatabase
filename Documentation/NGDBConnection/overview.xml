<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet type="text/css" href="../dbook.css" ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V5.0//EN" "http://www.oasis-open.org/docbook/xml/5.0/docbook.dtd">
<article xmlns="http://docbook.org/ns/docbook" xmlns:html="http://www.w3.org/1999/xhtml">
	<articleinfo>
		<title>NGDBConnection Class Reference</title>
		<author>
			<firstname>Mo</firstname>
			<lastname>McRoberts</lastname>
			<affiliation>
				<address>
					<email>mo.mcroberts@nexgenta.com</email>
				</address>
			</affiliation>
		</author>
		<copyright>
			<year>2009</year>
			<holder>Mo McRoberts</holder>
		</copyright>
	</articleinfo>
	
	<section role="availability">
		<variablelist>
			<varlistentry>
				<term>Inherits from</term>
				<listitem>
					<para><classname>NSObject</classname></para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Framework</term>
				<listitem>
					<para><filename>NGDatabase.framework</filename></para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Declared in</term>
				<listitem>
					<para><filename><html:a href="http://github.com/nevali/NGDatabase/blob/master/NGDatabase.h">NGDatabase.h</html:a></filename> (defined in <filename><html:a href="http://github.com/nevali/NGDatabase/blob/master/NGDBConnection.h">NGDBConnection.h</html:a></filename>)</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Availability</term>
				<listitem>
					<para>NGDatabase 1.0.0 and later</para>
				</listitem>
			</varlistentry>
			
		</variablelist>
	</section>
	
	<section>
		<title>Introduction</title>
		<para>
			The <classname>NGDBConnection</classname> class represents a connection
			to a database server (or, depending upon the type of database, a file
			or set of files on a local storage volume).
		</para>
		<para>
			Connections are established with <methodname><html:a href="connectionWithURL.xml">connectionWithURL:options:status:</html:a></methodname>
			or <methodname><html:a href="initWithURL.xml">initWithURL:options:status:</html:a></methodname>,
			which return an instance of a class defined by the driver for the type
			of database being connected to. The <propertyname>scheme</propertyname>
			of the specified URL determines which driver to use.
		</para>
		<para>
			Once a connection has been established, methods are available to
			add, modify, delete and perform queries upon data.
		</para>
		<para>
			Although <classname>NGDBConnection</classname> is primarily targeted
			at SQL databases, most operations are suitable for use as an interface
			to a different kind of database, such as an LDAP server (although one
			would not submit arbitary SQL queries to an LDAP database).
		</para>
	</section>
	
	<section>
		<title>Class methods</title>
		
		<section>
			<title>Establishing a connection</title>
			<variablelist>
				<varlistentry>
					<term><methodname><html:a href="connectionWithURL.xml">connectionWithURL:options:status:</html:a></methodname></term>
					<term><methodname><html:a href="connectionWithURL.xml">connectionWithURLString:options:status:</html:a></methodname></term>
					<listitem>
						<para>Returns an autoreleased instance representing a connection.</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>
	</section>
	
	<section>
		<title>Instance methods</title>
		
		<section>
			<title>Establishing a connection</title>
			<variablelist>
				<varlistentry>
					<term><methodname><html:a href="initWithURL.xml">initWithURL:options:status:</html:a></methodname></term>
					<term><methodname><html:a href="initWithURL.xml">initWithURLString:options:status:</html:a></methodname></term>
					<listitem>
						<para>Initialises an instance and establishes a connection.</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>
		
		<section>
			<title>Executing queries</title>
			<variablelist>
				<varlistentry>
					<term><methodname><html:a href="executeSQL.xml">executeSQL:withArray:status:</html:a></methodname></term>
					<term><methodname><html:a href="executeSQL.xml">executeSQL:status:, …</html:a></methodname></term>
					<listitem>
						<para>Executes a SQL statement which is not expected to return a result-set.</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><methodname><html:a href="query.xml">query:withArray:status:</html:a></methodname></term>
					<term><methodname><html:a href="query.xml">query:status:, …</html:a></methodname></term>
					<listitem>
						<para>
							Executes a SQL statement and returns an 
							<classname><html:a href="../NGDBResultSet/">NGDBResultSet</html:a></classname> instance
							representing the result-set.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="prepare.xml">prepare:status:</html:a></methodname></term>
					<listitem>
						<para>
							Creates an <classname><html:a href="../NGDBStatement/">NGDBStatement</html:a></classname> instance
							representing a query which can be executed multiple 
							times with differing sets of parameters.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="rowForQuery.xml">rowForQuery:withArray:status:</html:a></methodname></term>
					<term><methodname><html:a href="rowForQuery.xml">rowForQuery:status:, …</html:a></methodname></term>
					<listitem>
						<para>
							Executes the given query returning the first row of the
							result-set as an <classname>NSDictionary</classname>
							instance.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="rowsForQuery.xml">rowsForQuery:withArray:status:</html:a></methodname></term>
					<term><methodname><html:a href="rowsForQuery.xml">rowsForQuery:status:, …</html:a></methodname></term>
					<listitem>
						<para>
							Executes the given query returning the each row of the
							result-set (as <classname>NSDictionary</classname>
							instances) contained within an <classname>NSArray</classname>
							instance.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="columnForQuery.xml">columnForQuery:withArray:status:</html:a></methodname></term>
					<term><methodname><html:a href="columnForQuery.xml">columnForQuery:status:, …</html:a></methodname></term>
					<listitem>
						<para>
							Executes the given query returning an <classname>NSArray</classname>
							instance containing the values from first column in
							each of the rows of the result-set.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="dictForQuery.xml">dictForQuery:withArray:status:</html:a></methodname></term>
					<term><methodname><html:a href="dictForQuery.xml">dictForQuery:status:, …</html:a></methodname></term>
					<listitem>
						<para>
							Executes the given query returning an <classname>NSDictionary</classname>
							instance containing all of the rows of the result-set,
							with the first column used as the key for each entry
							and the remaining columns the value.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="valueForQuery.xml">valueForQuery:withArray:status:</html:a></methodname></term>
					<term><methodname><html:a href="valueForQuery.xml">valueForQuery:status:, …</html:a></methodname></term>
					<listitem>
						<para>
							Executes the given query returning the value contained
							within the first column of the first row of the
							result-set.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>
			
		<section>
			<title>Creating, modifying and deleting data</title>
			<variablelist>
			
				<varlistentry>
					<term><methodname><html:a href="insertInto.xml">insertInto:values:status:</html:a></methodname></term>
					<listitem>
						<para>
							Inserts a set of values into a table.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="insertInto.xml">update:values:constraints:status:</html:a></methodname></term>
					<listitem>
						<para>
							Replaces data in a table with the supplied values,
							optionally according to a set of constraints.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="deleteFrom.xml">deleteFrom:constraints:status:</html:a></methodname></term>
					<listitem>
						<para>
							Removes data from a table optionally according to a set of constraints.
						</para>
					</listitem>
				</varlistentry>

			</variablelist>
		</section>
		
		<section>
			<title>Transactions</title>
			<variablelist>
			
				<varlistentry>
					<term><methodname><html:a href="begin.xml">begin:</html:a></methodname></term>
					<listitem>
						<para>
							Begins a transaction.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="commit.xml">commit:</html:a></methodname></term>
					<listitem>
						<para>
							Commits (completes) a transaction.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="rollback.xml">rollback:</html:a></methodname></term>
					<listitem>
						<para>
							Rolls back (discards) a transaction.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>
		
		<section>
			<title>Object aliasing</title>
			<variablelist>
				<varlistentry>
					<term><methodname><html:a href="setAlias.xml">setAlias:forObject:</html:a></methodname></term>
					<term><methodname><html:a href="setAlias.xml">setAlias:forObject:inSchema:inDatabase:</html:a></methodname></term>
					<listitem>
						<para>
							Adds an alias for an object, optionally within a specified
							schema and/or database.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="aliasForObject.xml">aliasForObject:</html:a></methodname></term>
					<listitem>
						<para>
							Returns a fully-qualified object name given an alias name.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>
		
		<section>
			<title>Quoting and literals</title>
			<variablelist>
				<varlistentry>
					<term><methodname><html:a href="quote.xml">quote:</html:a></methodname></term>
					<listitem>
						<para>
							Quotes a value returning a string which may be substituted
							directly into a query.
						</para>
					</listitem>
				</varlistentry>
				
				<varlistentry>
					<term><methodname><html:a href="quoteObject.xml">quoteObject:qualify:</html:a></methodname></term>
					<term><methodname><html:a href="quoteObject.xml">quoteObject:inSchema:inDatabase:</html:a></methodname></term>
					<listitem>
						<para>
							Quotes the name of an object, resolving aliases as necessary,
							returning a string suitable for substitution into a
							query.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="now.xml">now</html:a></methodname></term>
					<listitem>
						<para>
							Returns a string which represents the current date and time,
							suitable for substitution into a query.
						</para>
					</listitem>
				</varlistentry>

			</variablelist>
		</section>
		
		<section>
			<title>Connection properties</title>
			<variablelist>

				<varlistentry>
					<term><methodname><html:a href="connected.xml">connected</html:a></methodname></term>
					<listitem>
						<para>
							<literal>YES</literal> if this instance represents an
							active connection to a database, <literal>NO</literal>
							otherwise.
						</para>
					</listitem>
				</varlistentry>
			
				<varlistentry>
					<term><methodname><html:a href="driverName.xml">driverName</html:a></methodname></term>
					<listitem>
						<para>
							The name of the driver used by this connection (e.g., “SQLite”).
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="schemaName.xml">schemaName</html:a></methodname></term>
					<listitem>
						<para>
							If the database system supports multiple schemata
							within a database, the name of the current schema.
						</para>
					</listitem>
				</varlistentry>
			
				<varlistentry>
					<term><methodname><html:a href="databaseName.xml">databaseName</html:a></methodname></term>
					<listitem>
						<para>
							If the database system supports accessing multiple
							databases from a single connection, the name of the
							current database.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="timeZone.xml">timeZone</html:a></methodname></term>
					<term><methodname><html:a href="timeZone.xml">setTimeZone:</html:a></methodname></term>
					<listitem>
						<para>
							The timezone associated with the connection, represented
							as an <classname>NSTimeZone</classname> instance.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="unbuffered.xml">unbuffered</html:a></methodname></term>
					<term><methodname><html:a href="unbuffered.xml">setUnbuffered:</html:a></methodname></term>
					<listitem>
						<para>
							A flag indicating whether the connection is operating
							in unbuffered mode. In buffered mode, if supported by
							the database system, all of the rows of a result-set
							are sent together to the client once a query has
							executed to allow accurate row-counts and concurrent
							queries to be executed within the same thread. Unbuffered
							mode may yield performance improvements at the expense
							of this flexibility.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="uncached.xml">uncached</html:a></methodname></term>
					<term><methodname><html:a href="uncached.xml">setUncached:</html:a></methodname></term>
					<listitem>
						<para>
							Where database systems perform query caching (caching the
							results of queries and returning them where identical
							queries are executed provided none of the concerned
							objects have been marked as invalidated), this flag
							explicitly requests that queries should ignore the
							cache. This flag is ordinarily only used when testing
							performance.
						</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term><methodname><html:a href="debugLogging.xml">debugLogging</html:a></methodname></term>
					<term><methodname><html:a href="debugLogging.xml">setDebugLogging:</html:a></methodname></term>
					<listitem>
						<para>
							Request that the driver log information about executed
							queries using <function>NSLog</function>. Note
							that this flag may cause sensitive information to be
							written to the system event log and an application’s
							standard error stream.
						</para>
					</listitem>
				</varlistentry>


			</variablelist>
		</section>

	</section>
	
</article>